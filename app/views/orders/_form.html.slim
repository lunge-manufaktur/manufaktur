= nested_form_for @order, data: { "order-id": @order.id } do |f|
  - if @order.errors.any?
    #error_explanation
      h4= "#{pluralize(@order.errors.count, "error")} prohibited this post from being saved:"
      ul
        - @order.errors.full_messages.each do |msg|
          .alert-box.alert data-alert=""
            li= msg

  section
    .row
      .span-small-12.span-medium-9
        h5 Kunde
        .fields
          = f.label :customer_id, "Auftraggeber"
          .select-container
            = f.collection_select(:customer_id, Retailer.order(:name), :id, :name, class: "submittable")
        #select_addresses
          = render "orders/select_addresses", :f => f

      .span-small-12.span-medium-3
        h5 Status
        .fields
          = f.label :delivered_on, "Liefertermin"
          = f.date_field :delivered_on
        .fields
          = f.label :completed_at, "Abgeschlossen am"
          = f.date_field :completed_at

  section
    ul.tabs data-tab=""
      li.tab-title.active = link_to "Artikel", "#tab-products"
      li.tab-title = link_to "Rechnung & Zahlung", "#tab-invoice"
      li.tab-title = link_to "Versand", "#tab-shipping"
    .tabs-content
      .tab.active#tab-products
        = react_component('LineItemSection', {})
        #line_item_target = f.fields_for :line_items
        ul.inline-list
          li= f.link_to_add icon("add", text: "Artikel hinzufügen"), :line_items, data: { target: "#line_item_target" }, class: "button small"

      .tab#tab-invoice
        .row
          .small-12.medium-6.columns
            section
              h4 Optionen
              .fields
                = f.check_box :is_free
                = f.label :is_free, "Kostenloser Auftrag"
              .fields
                = f.check_box :is_vat_exempt
                = f.label :is_vat_exempt, "Mehrwertsteuerbefreit"
            section
              h4 Rechnung
              ul.small-block-grid-2.medium-block-grid-3
                li.fields
                  = f.label :invoiced_at, "Rechnungsdatum"
                  = f.date_field :invoiced_at
                li.fields
                  = f.label :price_total, "Rechnungsbetrag"
                  span.input = number_to_currency(@order.price_total, unit: "€")
              h4 Skonto
              ul.small-block-grid-2.medium-block-grid-3
                li.fields
                  = f.label :cashback_until, "Skontofrist"
                  = f.date_field :cashback_until
                li.fields
                  = f.label "Skontobetrag"
                  span.input= number_to_currency(@order.price_cashback, unit: "€")
              h4 Zahlung
              ul.small-block-grid-2.medium-block-grid-3
                li.fields
                  = f.label :paid_on, "Zahlung erhalten am"
                  = f.date_field :paid_on
                li.fields
                  = f.label :time_for_payment, "Status"
                  - if @order.paid_on && @order.invoiced_at
                    span.input = "Bezahlt nach #{distance_of_time_in_words(@order.invoiced_at, @order.paid_on)}"
                  - elsif @order.invoiced_at.nil?
                    span.input.light = "Rechnung noch nicht gedruckt"
                  - else
                    span.input = "Ausstehend seit #{time_ago_in_words(@order.invoiced_at)}"

          .small-12.medium-6.columns
            h4 Zahlungsmoral
            table
              thead
                tr
                  th width="80" Auftrag
                  th width="100" Abgeschlossen
                  th Status
                  th.text-right width="120" Betrag
              tbody
                - Order.where(customer_id: @order.customer_id).where.not(id: @order.id, completed_at: nil).includes(:line_items).order(created_at: :desc).each do |other_order|
                  tr
                    td= link_to other_order.id, order_path(other_order), class: "link"
                    td= l other_order.completed_at, format: :date_only
                    td= payment_status(other_order)
                    td.text-right= number_to_currency(other_order.price_total, unit: "€")
              tfoot
                tr
                  td class="text-right" colspan=4
                    h4
                      span.thin offen: 
                      span.bold = number_to_currency(Order.where(customer_id: @order.customer_id, paid_on: nil).includes(:line_items).to_a.sum(&:price_total), unit: "€")

      .tab#tab-shipping
        p
          | Third panel content goes here